{"version":3,"sources":["components/SearchBar.js","components/Header.js","components/LargeDataCard.js","components/IndividualDataCard.js","components/MultiDataCard.js","components/App.js","index.js"],"names":["SearchBar","state","term","event","preventDefault","this","props","userSubmit","className","onSubmit","onFormSubmit","placeholder","type","onChange","e","setState","target","value","React","Component","Header","href","LargeDataCard","JSON","stringify","currentData","console","log","location","Math","floor","main","temp_min","temp_max","src","weather","icon","alt","description","temp","IndividualDataCard","time","timeOffset","timeAsInt","parseInt","slice","abb","date","dateDay","dateMonth","timeOrDate","undefined","timeShift","getCalendarDate","setAbbreviation","adjustTimeZone","round","MultiDataCard","data","dataArray","map","dt_txt","toString","App","city","currentWeather","hourlyWeather","dailyWeather","forecast","getDailyData","dataList","days","i","length","push","fetch","then","response","json","name","list","Object","values","timezone","catch","onSearchSubmit","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.a6a036cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this.props.userSubmit(this.state.term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-bar\">\r\n                <form onSubmit={event => this.onFormSubmit(event)}>\r\n                    <input \r\n                        className=\"user-input\"\r\n                        placeholder=\"Enter city\" \r\n                        type=\"text\"\r\n                        onChange={(e) => this.setState({term: e.target.value})}\r\n                        value={this.state.term}\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './Header.css'\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"title\">\r\n                <a href=\"#\">\r\n                    <div className=\"nav-icon\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </a>\r\n                <h1>WeatherGoGo</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./LargeDataCard.css\"\r\n\r\nclass LargeDataCard extends React.Component {\r\n    render() {\r\n\r\n        if (JSON.stringify(this.props.currentData) === \"{}\") {\r\n            return null\r\n        }\r\n\r\n        console.log(this.props.currentData);\r\n\r\n        return (\r\n            <div className=\"large-container\">\r\n                <div className=\"info-container\">\r\n                    <div className=\"city-name\">{this.props.location}</div>\r\n                    <div className=\"high-low-values\">\r\n                        <div>High: {Math.floor(this.props.currentData.main.temp_min)}&#xb0;</div>\r\n                        <div>Low: {Math.floor(this.props.currentData.main.temp_max)}&#xb0;</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"weather-container\">\r\n                    <img \r\n                        src={\"http://openweathermap.org/img/wn/\" + this.props.currentData.weather[0].icon + \"@2x.png\"}\r\n                        alt={this.props.currentData.weather[0].description}\r\n                        className=\"weather-img\"\r\n                    />\r\n                    <div className=\"temp\">{Math.floor(this.props.currentData.main.temp)}&#xb0;</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default LargeDataCard;","import React from 'react';\r\nimport './IndividualDataCard.css';\r\n\r\nclass IndividualDataCard extends React.Component {\r\n\r\n    // changes time zone from utc to local time\r\n    // parameters: int epochtime, int offset\r\n    // returns integer\r\n    adjustTimeZone(time, timeOffset) { \r\n        let timeAsInt = parseInt(time.slice(11,13));\r\n        if (timeAsInt === 0) {\r\n            timeAsInt = 24;\r\n        }\r\n        if (timeAsInt + (timeOffset/3600) <= 0) {\r\n            timeAsInt = 24 + timeAsInt + (timeOffset/3600);\r\n        } else {\r\n            timeAsInt += (timeOffset/3600);\r\n            if (timeAsInt > 24) {\r\n                timeAsInt = timeAsInt - 24;\r\n            }\r\n        }\r\n        return timeAsInt;\r\n    }\r\n\r\n    // gets correct abbreviation based on military time\r\n    // parameters: int time\r\n    // returns string\r\n    setAbbreviation(time) {\r\n        let abb;\r\n        if (time < 12) {\r\n            abb = \"am\";\r\n        } else if (time === 24) {\r\n            abb = \"am\";\r\n            time = 12;\r\n        } else if (time === 12) {\r\n            abb = \"pm\";\r\n        } else {\r\n            abb = \"pm\";\r\n            time -= 12;\r\n        }\r\n        return `${time} ${abb}`;\r\n    }\r\n\r\n    // gets correct date\r\n    // parameters: string \r\n    // returns string\r\n    getCalendarDate(date) {\r\n        let dateDay = parseInt(date.slice(5,7));\r\n        let dateMonth = parseInt(date.slice(8,10));\r\n        return `${dateDay}/${dateMonth}`;\r\n    }\r\n\r\n    render() {\r\n\r\n        let timeOrDate;\r\n        \r\n        if (this.props.timeShift === undefined) {\r\n            timeOrDate = this.getCalendarDate(this.props.time);\r\n        } else {\r\n            timeOrDate = this.setAbbreviation(this.adjustTimeZone(this.props.time, this.props.timeShift));\r\n        }\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"time\">\r\n                    {timeOrDate}\r\n                </div>\r\n                <div className=\"degrees\">\r\n                    {Math.round(this.props.temp)}&#xb0;\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndividualDataCard","import React from 'react';\r\nimport IndividualDataCard from \"./IndividualDataCard\";\r\nimport \"./MultiDataCard.css\"\r\n\r\nclass MultiDataCard extends React.Component {\r\n    render() {  \r\n              \r\n        if (JSON.stringify(this.props.data) === \"{}\") {\r\n            return null\r\n        }\r\n\r\n        const dataArray = this.props.data.map((data) => \r\n            <IndividualDataCard\r\n                key={data.dt_txt.toString()}\r\n                //data={data}\r\n                temp={data.main.temp}\r\n                time={data.dt_txt}\r\n                timeShift={this.props.timeShift}\r\n            />  \r\n        )\r\n\r\n        return (\r\n            <div className=\"multi-card\">\r\n                {dataArray}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MultiDataCard;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport Header from './Header';\r\nimport LargeDataCard from './LargeDataCard';\r\nimport MultiDataCard from './MultiDataCard';\r\n\r\nclass App extends React.Component {\r\n    state = { \r\n        city: 'New York', \r\n        currentWeather: {}, \r\n        hourlyWeather: {},\r\n        dailyWeather: {},\r\n        timeShift: 0\r\n    };\r\n\r\n    onSearchSubmit(term) {\r\n        this.forecast(term);\r\n    }\r\n\r\n    forecast(city) {\r\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=imperial&appid=c759b9338ad26a72a136d0741dfc4ae7`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    city: data.city.name, \r\n                    currentWeather: data.list[0],\r\n                    hourlyWeather: Object.values(data.list).slice(0,5),\r\n                    dailyWeather: getDailyData(Object.values(data.list)),\r\n                    timeShift: data.city.timezone\r\n                });\r\n                let i = 1;\r\n                console.log(\"API used: \" + i);\r\n                i += 1;\r\n                console.log(data);\r\n                console.log(\"Current Weather: \" + this.state.currentWeather);\r\n                console.log(\"Hourly Weather: \" + this.state.hourlyWeather);\r\n                console.log(\"Daily Weather: \" + this.state.dailyWeather);\r\n            })\r\n            .catch(data => console.log('invalid city name'));\r\n\r\n            function getDailyData (dataList) {\r\n                let days = [];\r\n                let i = 7;\r\n                while (i <= dataList.length) {\r\n                    days.push(dataList[i]);\r\n                    i += 8;\r\n                }\r\n                return days;\r\n            }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.forecast(this.state.city);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <SearchBar userSubmit={(term) => this.onSearchSubmit(term)}/>\r\n                <MultiDataCard \r\n                    data={this.state.hourlyWeather}\r\n                    timeShift={this.state.timeShift}     \r\n                />\r\n                <LargeDataCard \r\n                    location = {this.state.city}\r\n                    currentData = {this.state.currentWeather}\r\n                    timeShift = {this.state.timeShift}\r\n                />\r\n                <MultiDataCard \r\n                    data={this.state.dailyWeather}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/App';\n\nReactDom.render(\n    <App />,\n    document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}